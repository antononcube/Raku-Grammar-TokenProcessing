#!/usr/bin/env perl6
use v6.d;

use Grammar::TokenProcessing;


sub reallyflat (+@list) { gather @list.deepmap: *.take }

#| Get tokens from token lines in grammar roles.
multi MAIN(
        Str $inputFileName where *.IO.f, #= Input file name.
           ) {
    my @res = |get-tokens($inputFileName);
    .say for @res.sort;
}

multi MAIN(
        *@args,                   #= Input file names.
        Bool :$per-file = False   #= Should the tokens be printed out per file or not?
           ) {
    if [and] @args.map({ $_.IO.e }) {
        if $per-file {
            for @args -> $f {
                say '-' x 30;
                say $f;
                MAIN($f);
                say '-' x 30;
            }
        } else {
            my @res = reallyflat(@args>>.Str.map({ get-tokens($_) })).unique.sort;
            put @res;
        }
    } else {
        note "Not all of the arguments are file names."
    }
}