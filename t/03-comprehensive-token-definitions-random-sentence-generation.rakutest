use v6.d;
use Test;

use lib '.';
use lib './lib';

use Chemistry::Stoichiometry::Grammar;
use DSL::English::DataQueryWorkflows::Grammar;

use Grammar::TokenProcessing;

plan 2;

##-----------------------------------------------------------
## 1
##-----------------------------------------------------------
my $grammar1 = grammar Parser {
    rule  TOP  { I <love> <lang> }
    token love { '♥' | love }
    token lang { < Raku Perl Rust Go Python Ruby > }
}

my %rules1 = $grammar1.^method_table;

my @allSentences1 = (( 'I' X <♥ love>.Array) X <Raku Perl Rust Go Python Ruby>.Array).map(*.flat.join(' '));

ok generate-random-sentence('TOP', %rules1) ∈ @allSentences1;

##-----------------------------------------------------------
## 2
##-----------------------------------------------------------
ok generate-random-sentence($grammar1) ∈ @allSentences1;


done-testing;
